// function calculateVolumeAndArea(a) {
//   if (typeof a === "number" && a > 0 && Number.isInteger(a)) {
//     let v = a * a * a;
//     let s = a * a * 6;
//     return `–û–±—ä–µ–º –∫—É–±–∞:${v}, –ø–ª–æ—â–∞–¥—å –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏:${s}`;
//   } else {
//     return "–ü—Ä–∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞";
//   }
// }

// console.log(calculateVolumeAndArea(10));

// function getCoupeNumber(number) {
//   if (Number.isInteger(number) && number > 0 && number < 36) {
//     if (number % 4 === 0) {
//       return (number / 4);
//     } else if (number <= 4) {
//       return (1);
//     } else {
//       return (Math.ceil(number / 4));
//     }
//   } else if (number === 0 || number > 36) {
//     return ("–¢–∞–∫–∏—Ö –º–µ—Å—Ç –≤ –≤–∞–≥–æ–Ω–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç");
//   } else {
//     return ("–û—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –º–µ—Å—Ç–∞");
//   }
// }

// function getTimeFromMinutes(minuts) {
//   if (isNaN(minuts) || !Number.isInteger(minuts) || minuts < 0) {
//     return "–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ";
//   } else {
//     if (Math.floor(minuts / 60) === 1) {
//       return `—ç—Ç–æ ${Math.floor(minuts / 60)} —á–∞—Å –∏ ${minuts % 60} –º–∏–Ω—É—Ç`;
//     } else if (Math.floor(minuts / 60) > 1 && Math.floor(minuts / 60) < 5) {
//       return `—ç—Ç–æ ${Math.floor(minuts / 60)} —á–∞—Å–∞ –∏ ${minuts % 60} –º–∏–Ω—É—Ç`;
//     } else {
//       return `—ç—Ç–æ ${Math.floor(minuts / 60)} —á–∞—Å–æ–≤ –∏ ${minuts % 60} –º–∏–Ω—É—Ç`;
//     }
//   }
// }

// function findMaxNumber() {
//   let arr = [];
//   for (let i = 0; i < 4; i++) {
//     arr[i] = Number(prompt("–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ", ""));
//   }
//   for (let i = 0; i < arr.length; i++) {
//     if (isNaN(arr[i]) || !Number.isInteger(arr[i])) {
//       return 0;
//     } else {
//       return Math.max(...arr);
//     }
//   }
// }

// console.log(findMaxNumber());
// function fib(number) {
//   let str = "";

//   // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
//   if (isNaN(number) || number <= 0 || !Number.isInteger(number)) {
//     return "";
//   }

//   // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–∏—Å–µ–ª –§–∏–±–æ–Ω–∞—á—á–∏
//   let a = 0,
//     b = 1;

//   for (let i = 0; i < number; i++) {
//     str += i === 0 ? a : " " + a;
//     let next = a + b;
//     a = b;
//     b = next;
//   }

//   return str;
// }

// // console.log(fib(8));
// debugger;
// function fetchData(callback) {
//   console.log("1.Fetching data...");

//   setTimeout(() => {
//     console.log("2.Data fetched.");
//     callback(); // Callback after data is fetched
//   }, 2000); // 2-second delay
// }

// function processData() {
//   console.log("3.Processing the data...");
// }

// fetchData(processData); // fetchData is called, then processData is called after 2 seconds

// const elements = document.querySelectorAll('div');
// console.log(elements);  // NodeList (pseudo-array)
// console.log(elements[0]);  // First div element
// console.log(elements.length);  // Number of div elements

// const personalPlanPeter = {
//   name: "Peter",
//   age: "29",
//   skills: {
//     languages: ["ru", "eng"],
//     programmingLangs: {
//       js: "20%",
//       php: "10%",
//     },
//     exp: "1 month",
//   },
//   showAgeAndLangs: function (plan) {
//     const { age } = plan;
//     const { languages } = plan.skills;
//     console.log(plan.skills);
//     let str = `–ú–Ω–µ ${age} –∏ —è –≤–ª–∞–¥–µ—é —è–∑—ã–∫–∞–º–∏: `;

//     languages.forEach(function (lang) {
//       str += `${lang.toUpperCase()} `;
//     });

//     return str;
//   },
// };

// let arr = [1, 2, 3];
// console.dir(arr);

// let obj = {
//   a: 1,
//   b: 2,
// };

// console.dir(obj);

// let str = "1, 2, 5";
// console.dir(str);

// let a,
//   b = 123;
// console.dir(a);
// console.dir(b.toString());

// const st = new String("hello");
// console.log(st);

// –£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–±–æ–ª—å—à–æ–π –∫—É—Å–æ—á–µ–∫ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ—Ä–≥–æ–≤–æ–º —Ü–µ–Ω—Ç—Ä–µ, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ –æ–±—ä–µ–∫—Ç–µ shoppingMallData. –û–Ω–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –º–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö, –≥–¥–µ —É–∫–∞–∑–∞–Ω–∞ –¥–ª–∏–Ω–∞ –∏ —à–∏—Ä–∏–Ω–∞ –ø–æ–º–µ—â–µ–Ω–∏—è; –≤—ã—Å–æ—Ç—É –ø–æ–º–µ—â–µ–Ω–∏—è; —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∑–∞ 1 –∫—É–±–∏—á–µ—Å–∫–∏–π –º–µ—Ç—Ä –∏ –±—é–¥–∂–µ—Ç –Ω–∞ –æ–ø–ª–∞—Ç—É –æ—Ç–æ–ø–ª–µ–Ω–∏—è –∑–∞ –º–µ—Å—è—Ü.

// –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ - —ç—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é isBudgetEnough, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É. –ï—Å–ª–∏ –±—é–¥–∂–µ—Ç–∞ —Ö–≤–∞—Ç–∞–µ—Ç –¥–ª—è –æ—Ç–æ–ø–ª–µ–Ω–∏—è –≤—Å–µ–≥–æ –æ–±—ä–µ–º–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ - –≤—ã–≤–æ–¥–∏—Ç—Å—è '–ë—é–¥–∂–µ—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ', –µ—Å–ª–∏ –Ω–µ—Ç - '–ë—é–¥–∂–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ'. –ò –≤—Å–µ üôÇ

// –ù–æ —ç—Ç–∞ –∑–∞–¥–∞—á–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–¥–∑–∞–¥–∞—á –≤–Ω—É—Ç—Ä–∏:

// - –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–π –ø–ª–æ—â–∞–¥–∏ –≤—Å–µ—Ö –º–∞–≥–∞–∑–∏–Ω–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –∫–∞–∫ –¥–ª–∏–Ω–∞ –º–∞–≥–∞–∑–∏–Ω–∞, —É–º–Ω–æ–∂–µ–Ω–Ω–∞—è –Ω–∞ –µ–≥–æ —à–∏—Ä–∏–Ω—É;

// - –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –æ–±—ä–µ–º–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞, —Ç–∞–∫ –∫–∞–∫ —Ü–µ–Ω–∞ –æ—Ç–æ–ø–ª–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–∞ –≤ –∫—É–±–∏—á–µ—Å–∫–∏—Ö –º–µ—Ç—Ä–∞—Ö;

// - –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–≥–æ, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É —Ç–∞–∫–æ–≥–æ –æ–±—ä–µ–º–∞;

// - –≤—Å–µ —á–∏—Å–ª–∞ –∏–¥—É—Ç –±–µ–∑ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è, –ø—Ä–æ—Å—Ç–æ —Ü–∏—Ñ—Ä—ã –∏ –≤—Å–µ;

// - —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å, –¥–∞–∂–µ –µ—Å–ª–∏ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞–≥–∞–∑–∏–Ω–æ–≤, –≤—ã—Å–æ—Ç–∞, –±—é–¥–∂–µ—Ç –∏–ª–∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤–æ–æ–±—â–µ –¥—Ä—É–≥–æ–π –æ–±—ä–µ–∫—Ç.
// const shoppingMallData = {
//   shops: [
//     {
//       width: 10,
//       length: 5,
//     },
//     {
//       width: 15,
//       length: 7,
//     },
//     {
//       width: 20,
//       length: 5,
//     },
//     {
//       width: 8,
//       length: 10,
//     },
//   ],
//   height: 5,
//   moneyPer1m3: 30,
//   budget: 50000,
// };

// function isBudgetEnough(data) {
//   let area = 0;
//   let volume;
//   let utilityBills;
//   data.shops.forEach((items) => {
//     let sum = items.width * items.length;
//     area += sum;
//   });
//   volume = data.height * area;
//   utilityBills = volume * data.moneyPer1m3;
//   if (utilityBills > data.budget) {
//     return "–ë—é–¥–∂–µ—Ç–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ";
//   } else return "–ë—é–¥–∂–µ—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ";
// }

// console.log(isBudgetEnough(shoppingMallData));

// const students = [
//   "Peter",
//   "Andrew",
//   "Ann",
//   "Mark",
//   "Josh",
//   "Sandra",
//   "Cris",
//   "Bernard",
//   "Takesi",
//   "Sam",
// ];

// function sortStudentsByGroups(arr) {
//   arr.sort();
//   let groupedNames = [];
//   let str =
//     arr.length % 3 === 0 ? "–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: -" : "–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: ";

//   for (let i = 0; i < arr.length; i += 3) {
//     if (arr.length - i >= 3) {
//       groupedNames.push(arr.slice(i, i + 3));
//     } else {
//       let remaining = arr.slice(i);
//       str += remaining.join(", ");
//     }
//   }

//   groupedNames.push(str);
//   return groupedNames;
// }

// console.log(sortStudentsByGroups(students));

// const students = [
//   "Peter",
//   "Andrew",
//   "Ann",
//   "Mark",
//   "Josh",
//   "Sandra",
//   "Cris",
//   "Bernard",
//   "Takesi",
//   "Sam",
//   "Sandra",
//   "Cris",
//   "Bernard",
//   "Takesi",
//   "Sam",
// ];

// function sortStudentsByGroups(arr) {
//   arr.sort();
//   const a = [],
//     b = [],
//     c = [],
//     rest = [];

//   for (let i = 0; i < arr.length; i++) {
//     if (i < 3) {
//       a.push(arr[i]);
//     } else if (i < 6) {
//       b.push(arr[i]);
//     } else if (i < 9) {
//       c.push(arr[i]);
//     } else {
//       rest.push(arr[i]);
//     }
//   }
//   return [
//     a,
//     b,
//     c,
//     `–û—Å—Ç–∞–≤—à–∏–µ—Å—è —Å—Ç—É–¥–µ–Ω—Ç—ã: ${rest.length === 0 ? "-" : rest.join(", ")}`,
//   ];
// }

// console.log(sortStudentsByGroups(students));

// function groupStudentsByGrade(studentsWithGrades) {
//   // Sort the students alphabetically by name
//   studentsWithGrades.sort((a, b) => a.name.localeCompare(b.name));

//   // Initialize an object to hold the groups by grade
//   const groupedStudents = {};

//   // Loop through each student
//   for (const student of studentsWithGrades) {
//     // If the grade doesn't exist in the object, create a new array for it
//     if (!groupedStudents[student.grade]) {
//       groupedStudents[student.grade] = [];
//     }
//     // Add the student's name to the corresponding grade group
//     groupedStudents[student.grade].push(student.name);
//   }

//   // Convert the grouped object to an array of groups sorted by grade
//   const result = [];
//   for (const grade in groupedStudents) {
//     result.push(groupedStudents[grade]);
//   }

//   return result;
// }

// const studentsWithGrades = [
//   { name: "Peter", grade: 5 },
//   { name: "Anna", grade: 4 },
//   { name: "Sam", grade: 5 },
//   { name: "Mark", grade: 4 },
//   { name: "Sandra", grade: 5 },
//   { name: "John", grade: 3 },
// ];

//   const groupedStudents = {};
//   studentsWithGrades.forEach((student) => {
//     if (!groupedStudents[student.grade]) {
//       groupedStudents[student.grade] = [];
//     }
//     groupedStudents[student.grade].push(student.name);
//   });

// console.log(groupedStudents);

// const students = [
//   { name: "Peter", subjects: ["Math", "Physics"] },
//   { name: "Anna", subjects: ["Math", "Biology"] },
//   { name: "Sam", subjects: ["Physics", "Biology"] },
//   { name: "Mark", subjects: ["Math", "Physics"] },
//   { name: "Sandra", subjects: ["Biology", "Chemistry"] },
// ];
// function sortedStudentsBySubject(data) {
//   const groupedStudents = {};
//   data.forEach((element) => {
//     element.subjects.forEach((subject) => {
//       if (!groupedStudents[subject]) {
//         groupedStudents[subject] = [];
//       }
//       groupedStudents[subject].push(element.name);
//     });
//   });
//   return groupedStudents;
// };

// console.log(sortedStudentsBySubject(students));

// const arrays = [
//   [1, 2],
//   [3, 4],
//   [5, 6],
// ];

// const modyfyArr = arrays.join();
// const newArr = [];
// for (let value of modyfyArr) {
//   value = +value;
//   if (!isNaN(value)) {
//     newArr.push(value);
//   }
// }
// console.log(newArr);

// const arrays = [
//   [1, 2],
//   [3, 4],
//   [5, 6],
// ];

// // Flatten the array
// const flattenedArr = arrays.flat();
// console.log(flattenedArr);

// function outer() {
//   let outerVar = "I am from the outer function"; debugger;

//   function inner() {
//     console.log(outerVar); debugger;
//   }

//   return inner;
// }

// const closureFunction = outer(); debugger;
// closureFunction();

// let a = 3;
// function addTwo(x) {
//   let ret = x + 2;
//   return ret;
// }
// let b = addTwo(a);
// console.log(b);

// function createCounter() {
//   let counter = 0;
//   const myFunction = function () {
//     counter = counter + 1;
//     return counter;
//   };
//   return myFunction;
// }
// const increment = createCounter();
// const c1 = increment();
// const c2 = increment();
// const c3 = increment();
// console.log("example increment", c1, c2, c3);

// function makeCounter() {
//   let count = 0;

//   return function() {
//     return count++;
//   };
// }

// let counter = makeCounter();
// let counter2 = makeCounter();

// alert( counter() ); //0
// alert( counter() ); //1

// alert( counter2() ); //0
// alert( counter2() ); //1

// function foo(a, b) {
//   const [first] = a;
//   const { eng } = b;

//   return `${first} ${eng}`;
// }

// const result = foo(["Hello", "–ü—Ä–∏–≤–µ—Ç"], { ru: "–ú–∏—Ä", eng: "World" });
// console.log(result);

// let x = 5;
// alert(x++);
// alert( null || 2 && 3 || 4 );
// alert( +"Infinity" );
// console.log("–Å–∂–∏–∫" > "—è–±–ª–æ–∫–æ");
// console.log(0 || "" || 2 || undefined || true || fals–µ);
// a = [1, 2, 3]; b = [1, 2, 3];  
// console.log(a==b);

// const restorantData = {
//   menu: [
//     {
//       name: "Salad Caesar",
//       price: "14$",
//     },
//     {
//       name: "Pizza Diavola",
//       price: "9$",
//     },
//     {
//       name: "Beefsteak",
//       price: "17$",
//     },
//     {
//       name: "Napoleon",
//       price: "7$",
//     },
//   ],
//   waitors: [
//     { name: "Alice", age: 22 },
//     { name: "John", age: 24 },
//   ],
//   averageLunchPrice: "20$",
//   openNow: true,
// };


// function isOpen(prop) {
//   let answer = "";
//   prop ? (answer = "–û—Ç–∫—Ä—ã—Ç–æ") : (answer = "–ó–∞–∫—Ä—ã—Ç–æ");

//   return answer;
// }

// console.log(isOpen(restorantData.openNow));

// function isAverageLunchPriceTrue(fDish, sDish, average) {
//   if (+fDish.price.slice(0, -1) + parseInt(sDish.price) < parseInt(average)) {
//     return "–¶–µ–Ω–∞ –Ω–∏–∂–µ —Å—Ä–µ–¥–Ω–µ–π";
//   } else {
//     return "–¶–µ–Ω–∞ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π";
//   }
// }

// console.log(
//   isAverageLunchPriceTrue(
//     restorantData.menu[2],
//     restorantData.menu[3],
//     restorantData.averageLunchPrice
//   )
// );

// function transferWaitors(data) {
//   const copy = Object.assign({}, data);
//   copy.waitors = [{ name: "Mike", age: 32 }];
//   return copy;
// }

// console.log(transferWaitors(restorantData)); 

const pArr = document.getElementsByTagName('div');
console.log(pArr);

const pArr1 = document.getElementsByClassName('container');
console.log(pArr1);
let nodes = document.querySelectorAll("div");
for (let [index, node] of nodes.entries()) {
  console.log(index, node); // –ò–Ω–¥–µ–∫—Å –∏ —Å–∞–º —ç–ª–µ–º–µ–Ω—Ç
}

const arr = [1,2,3,5,6]
console.log(arr);